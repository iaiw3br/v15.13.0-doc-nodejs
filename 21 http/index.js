const http = require('http');
/*
* Для использования необходимо подключить http через require.
* HTTP интерфейс в node.js для поддержки многих функции протокола, которые традиционно было трудно поддерживать.
* В частности, большие сообщения, возможно, закодированные по частям. Интерфейс старается никогда не
* буферизировать целые запросы или ответы, поэтому пользователь может передавать данные в потоке.
* Заголовки HTTP могут быть представлены в следующем виде:
* {
* 'content-length': '123',
* 'content-type': 'text/plain',
* 'connection': 'keep-alive',
* 'host': 'mysite.com',
* 'accept': '*//*'
* }
* Ключи в нижнем регистре, значения не изменяются.
* Для поддержки полного спектра возможных HTTP приложений, node.js HTTP API очень низкоуровневый.
* Занимается только обработкой потоков и анализом сообщений. Разбирает сообщение на заголовки и тело, но не
* анализирует их.
* Необработанные заголовки сохраняются в свойстве rawHeaders: ['content-length': '123' ...]
*/


/*
* Class: http.Agent
*
* */
